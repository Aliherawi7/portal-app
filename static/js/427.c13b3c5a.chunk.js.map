{"version":3,"file":"static/js/427.c13b3c5a.chunk.js","mappings":"sOA2GA,UAlGc,WACZ,OAA4BA,EAAAA,EAAAA,UAAS,CACnCC,MAAO,GACPC,SAAU,KACV,eAHKC,EAAM,KAAEC,EAAS,KAIxB,GAAqBC,EAAAA,EAAAA,MAAZC,GAA2B,YAAnB,GACjB,GAA0BN,EAAAA,EAAAA,YAAU,eAA7BO,EAAK,KAAEC,EAAQ,KACtB,GAA8BR,EAAAA,EAAAA,WAAS,GAAM,eAAtCS,EAAO,KAAEC,EAAU,KAEpBC,EAAe,SAACC,GACpBJ,GAAS,GACTJ,GAAU,SAACS,GAAI,yBAAWA,GAAI,cAAGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,OAAK,GACjE,EACMC,GAAWC,EAAAA,EAAAA,MA4CjB,OACE,iBAAKC,UAAU,sEAAqE,WAClF,gBAAKA,UAAU,oEACf,gBAAKA,UAAU,uFAAsF,UACnG,kBAAMC,OAAO,GAAE,WACb,iBAAKD,UAAU,iBAAgB,WAC7B,iBAAKA,UAAU,yBAAwB,WACrC,kBACEE,KAAK,OACLC,YAAY,iCACZP,KAAK,QACLC,MAAa,OAANb,QAAM,IAANA,OAAM,EAANA,EAAQF,MACfsB,SAAU,SAACX,GAAC,OAAKD,EAAaC,EAAE,KAElC,cAAGO,UAAWK,EAAAA,EAAAA,mBAEhB,iBAAKL,UAAU,yBAAwB,WACrC,kBACEE,KAAK,WACLC,YAAY,8CACZP,KAAK,WACLC,MAAOb,EAAOD,SACdqB,SAAU,SAACX,GAAC,OAAKD,EAAaC,EAAE,KAElC,cAAGO,UAAWK,EAAAA,EAAAA,iBAGjBjB,IAAS,cAAGY,UAAU,QAAO,SAAC,sJAC/B,gBAAKA,UAAU,mEAAkE,UAC/E,SAAC,IAAM,CACLM,KAAM,uEACNC,QAxES,SAACd,GACpBF,GAAW,GACXE,EAAEe,iBACFC,MAAMC,EAAAA,EAAAA,KAAoBA,EAAAA,EAAAA,MAAAA,MAA0B,CAClDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU/B,KAEpBgC,MAAK,SAACC,GAEL,GADA1B,GAAW,GACP0B,EAAIC,GACN,OAAOD,EAAIE,OAIX,MADA9B,GAAS,GACH,IAAI+B,MAAMH,EAAII,WAExB,IACCL,MAAK,SAACM,GAELC,aAAaC,QAAQ,QAAa,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,OACpCF,aAAaC,QAAQ,OAAY,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAM1B,MACnC2B,aAAaC,QAAQ,WAAYF,EAAKI,UACtCH,aAAaC,QAAQ,QAAa,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,OACpCyC,aAAaC,QAAQ,SAAc,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMK,QACrCJ,aAAaC,QAAQ,WAAgB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMM,UACvCL,aAAaC,QAAQ,QAAa,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMO,MAAMC,YAC1C3C,EAAS,CACPe,KAAM6B,EAAAA,GAAAA,mBACNC,QAASV,IAEXxB,EAAS,IACX,IACCmC,OAAM,SAAC7C,GACNG,GAAW,GACXF,EAASD,EACX,GACJ,EAkCYE,QAASA,aAOvB,C","sources":["pages/Login/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport \"./Login.css\"\r\nimport { actionTypes } from \"../../context/reducer\"\r\nimport { useStateValue } from \"../../context/StateProvider\"\r\nimport Button from \"../../components/UI/Button/Button\"\r\nimport APIEndpoints from \"../../constants/APIEndpoints\"\r\nimport ICONS from \"../../constants/Icons\"\r\n\r\nconst Login = () => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  })\r\n  const [, dispatch] = useStateValue()\r\n  const [error, setError] = useState()\r\n  const [loading, setlaoding] = useState(false)\r\n\r\n  const handleChange = (e) => {\r\n    setError(false)\r\n    setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }))\r\n  }\r\n  const navigate = useNavigate()\r\n\r\n  // Handle Submit\r\n  const handleSubmit = (e) => {\r\n    setlaoding(true)\r\n    e.preventDefault()\r\n    fetch(APIEndpoints.root + APIEndpoints.login.login, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(inputs),\r\n    })\r\n      .then((res) => {\r\n        setlaoding(false)\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          // do some error handling\r\n          setError(true)\r\n          throw new Error(res.statusText)\r\n        }\r\n      })\r\n      .then((data) => {\r\n        // if successfully authenticated\r\n        localStorage.setItem(\"token\", data?.token)\r\n        localStorage.setItem(\"name\", data?.name)\r\n        localStorage.setItem(\"lastname\", data.lastname)\r\n        localStorage.setItem(\"email\", data?.email)\r\n        localStorage.setItem(\"userId\", data?.userId)\r\n        localStorage.setItem(\"imageUrl\", data?.imageUrl)\r\n        localStorage.setItem(\"roles\", data?.roles.toString())\r\n        dispatch({\r\n          type: actionTypes.SET_AUTHENTICATION,\r\n          payload: data,\r\n        })\r\n        navigate(\"/\")\r\n      })\r\n      .catch((error) => {\r\n        setlaoding(false)\r\n        setError(error)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"login fade_in display_flex align_items_center flex_direction_column\">\r\n      <div className=\"avatart display_flex align_items_center justify_content_center\"></div>\r\n      <div className=\"login_container login_details display_flex align_items_center justify_content_center\">\r\n        <form action=\"\">\r\n          <div className=\"form_container\">\r\n            <div className=\"login_box display_grid\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"ایمیل\"\r\n                name=\"email\"\r\n                value={inputs?.email}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <i className={ICONS.personCircle}></i>\r\n            </div>\r\n            <div className=\"login_box display_grid\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"رمز عبور\"\r\n                name=\"password\"\r\n                value={inputs.password}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <i className={ICONS.lockFill}></i>\r\n            </div>\r\n          </div>\r\n          {error && <p className=\"error\">ایمیل یا رمز عبور اشتباه است!</p>}\r\n          <div className=\"btn_login display_flex align_items_center justify_content_center\">\r\n            <Button\r\n              text={\"ورود به سیستم\"}\r\n              onClick={handleSubmit}\r\n              loading={loading}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"names":["useState","email","password","inputs","setInputs","useStateValue","dispatch","error","setError","loading","setlaoding","handleChange","e","prev","target","name","value","navigate","useNavigate","className","action","type","placeholder","onChange","ICONS","text","onClick","preventDefault","fetch","APIEndpoints","method","headers","body","JSON","stringify","then","res","ok","json","Error","statusText","data","localStorage","setItem","token","lastname","userId","imageUrl","roles","toString","actionTypes","payload","catch"],"sourceRoot":""}