{"version":3,"file":"static/js/791.8dfa5733.chunk.js","mappings":"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","sources":["constants/Roles.js","pages/Login/ResetPassword.jsx"],"sourcesContent":["const Roles = {\r\n  ADMIN: \"ADMIN\",\r\n  STUDENT: \"STUDENT\",\r\n}\r\nexport default Roles\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport \"./Login.css\"\r\nimport \"./ResetPassword.css\"\r\nimport { useStateValue } from \"../../context/StateProvider\"\r\nimport { actionTypes } from \"../../context/reducer\"\r\nimport APIEnpoints from \"../../constants/APIEndpoints\"\r\nimport APIEndpoints from \"../../constants/APIEndpoints\"\r\nimport BackDrop from \"../../components/UI/BackDrop/BackDrop\"\r\nimport MessageBox from \"../../components/UI/MessageBox/MessageBox\"\r\nimport ICONS from \"../../constants/Icons\"\r\nimport Roles from \"../../constants/Roles\"\r\nimport Button from \"../../components/UI/Button/Button\"\r\n\r\nconst ResetPassword = () => {\r\n  const { id } = useParams()\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [prePassword, setPrePassword] = useState(\"\")\r\n  const [{ authentication }, dispatch] = useStateValue()\r\n  const [error, setError] = useState(null)\r\n  const [completeMsg, setCompleteMsg] = useState({ show: false, msg: \"\" })\r\n  const navigate = useNavigate()\r\n  const [loading, setloading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // if the user was admin and profile page is from a student\r\n    if (\r\n      authentication.roles.includes(Roles.ADMIN) &&\r\n      authentication.userId != id\r\n    ) {\r\n      fetch(APIEndpoints.root + APIEndpoints.students.getStudent(id), {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + authentication.token,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setEmail(data?.studentPersonalInfo?.email)\r\n        })\r\n        .catch(() => navigate(\"/\"))\r\n\r\n      // if user is a student or admin but the profile page is from himself\r\n    } else if (\r\n      (authentication.roles.includes(Roles.STUDENT) &&\r\n        authentication.userId == id) ||\r\n      (authentication.roles.includes(Roles.ADMIN) &&\r\n        authentication.userId == id)\r\n    ) {\r\n      setEmail(localStorage.getItem(\"email\"))\r\n    } else {\r\n      navigate(\"/\")\r\n    }\r\n  }, [id])\r\n\r\n  const sendInformation = (e) => {\r\n    setError(null)\r\n    e.preventDefault()\r\n\r\n    // here should do some messaging\r\n    if (password.length < 5) {\r\n      setError(\"رمز جدید باید بیشتر از 5 کارکتر باشد!\")\r\n      return\r\n    }\r\n    if (password == prePassword) {\r\n      setError(\"رمز جدید با رمز قبلی یکسان است\")\r\n      return\r\n    }\r\n    setloading(true)\r\n    fetch(APIEndpoints.root + APIEnpoints.login.update, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + authentication.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userId: id,\r\n        email: email,\r\n        previousPassword: prePassword,\r\n        newPassword: password,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        setloading(false)\r\n        if (res.ok) {\r\n          setCompleteMsg({\r\n            show: true,\r\n            msg: \"اطلاعات کاربری با موفقیت بروزرسانی شد!\",\r\n          })\r\n        }\r\n        return res.json()\r\n      })\r\n      .then((data) => {\r\n        if (data?.statusCode) {\r\n          setError(data.message)\r\n          return\r\n        }\r\n        if (authentication.userId == id) {\r\n          localStorage.setItem(\"token\", data?.token)\r\n          localStorage.setItem(\"name\", data?.name)\r\n          localStorage.setItem(\"lastname\", data.lastname)\r\n          localStorage.setItem(\"email\", data?.email)\r\n          localStorage.setItem(\"userId\", data?.userId)\r\n          localStorage.setItem(\"imageUrl\", data?.imageUrl)\r\n          localStorage.setItem(\"roles\", data?.roles.toString())\r\n          dispatch({\r\n            type: actionTypes.SET_AUTHENTICATION,\r\n            payload: data,\r\n          })\r\n        }\r\n      })\r\n  }\r\n  return (\r\n    <div className=\"reset_password box_shadow\">\r\n      <div className=\"reset_password_title\">\r\n        <h2>ایمیل و رمز جدید تان را وارد نماید.</h2>\r\n      </div>\r\n      <form\r\n        action=\"\"\r\n        className=\"display_flex align_items_center justify_content_center flex_direction_column\"\r\n      >\r\n        <div className=\"form_container reset_password_form text_align_center border_radius_8\">\r\n          <div className=\"login_box display_grid\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"ایمیل جدید\"\r\n              name=\"resetemail\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              inputMode=\"email\"\r\n            />\r\n            <i className={ICONS.personCircle}></i>\r\n          </div>\r\n          <div className=\"login_box display_grid\">\r\n            <input\r\n              type=\"password\"\r\n              value={prePassword}\r\n              onChange={(e) => setPrePassword(e.target.value)}\r\n              placeholder=\"رمز قبلی\"\r\n              name=\"password\"\r\n            />\r\n            <i className={ICONS.lock}></i>\r\n          </div>\r\n          <div className=\"login_box display_grid\">\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"رمز جدید\"\r\n              name=\"password\"\r\n            />\r\n            <i className={ICONS.lockFill}></i>\r\n          </div>\r\n          {error && <p className=\"error\">{error}</p>}\r\n        </div>\r\n        <div className=\"reset_button\">\r\n          <Button loading={loading} onClick={sendInformation} text=\"ارسال\" />\r\n        </div>\r\n      </form>\r\n      <BackDrop show={completeMsg.show}>\r\n        {\r\n          <MessageBox\r\n            messageType=\"info\"\r\n            firstBtn={{ btnText: \"تایید\", onClick: () => navigate(\"/\") }}\r\n            message={completeMsg.msg}\r\n            iconType={ICONS.info}\r\n          />\r\n        }\r\n      </BackDrop>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n"],"names":["ADMIN","STUDENT","id","useParams","useState","email","setEmail","password","setPassword","prePassword","setPrePassword","useStateValue","authentication","dispatch","error","setError","show","msg","completeMsg","setCompleteMsg","navigate","useNavigate","loading","setloading","useEffect","roles","includes","Roles","userId","fetch","APIEndpoints","method","headers","Authorization","token","then","res","json","data","studentPersonalInfo","catch","localStorage","getItem","className","action","type","placeholder","name","value","onChange","e","target","inputMode","ICONS","Button","onClick","preventDefault","length","APIEnpoints","body","JSON","stringify","previousPassword","newPassword","ok","statusCode","message","setItem","lastname","imageUrl","toString","actionTypes","payload","text","BackDrop","MessageBox","messageType","firstBtn","btnText","iconType"],"sourceRoot":""}