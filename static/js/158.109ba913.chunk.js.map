{"version":3,"file":"static/js/158.109ba913.chunk.js","mappings":"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","sources":["Hooks/useProtect.js","Utils/DateTimeUtils.js","components/Post/Post.jsx","constants/Roles.js","pages/PostManagement/PostManagement.jsx"],"sourcesContent":["import { useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useStateValue } from \"../context/StateProvider\"\r\nimport Roles from \"../constants/Roles\"\r\n\r\nconst useProtect = ({ roles, id }) => {\r\n  const [{ authentication }, dispatch] = useStateValue()\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    if (!authentication.isAuthenticated) {\r\n      navigate(\"/login\")\r\n      return\r\n    }\r\n    if (\r\n      authentication.isAuthenticated &&\r\n      !authentication.roles.some((item) => roles.includes(item))\r\n    ) {\r\n      navigate(\"/\")\r\n      return\r\n    }\r\n    if (\r\n      authentication.roles.includes(Roles.STUDENT) &&\r\n      id &&\r\n      id != authentication?.userId\r\n    ) {\r\n      navigate(\"/\")\r\n      return\r\n    }\r\n  }, [])\r\n}\r\n\r\nexport default useProtect\r\n","export function timeSince(date) {\r\n  const now = new Date()\r\n  const seconds = Math.floor((now - date) / 1000)\r\n\r\n  let interval = Math.floor(seconds / 31536000)\r\n  if (interval >= 1) {\r\n    return `${interval} سال پیش`\r\n  }\r\n\r\n  interval = Math.floor(seconds / 2592000)\r\n  if (interval >= 1) {\r\n    return `${interval} ماه پیش`\r\n  }\r\n\r\n  interval = Math.floor(seconds / 86400)\r\n  if (interval >= 1) {\r\n    return `${interval} روز پیش`\r\n  }\r\n\r\n  interval = Math.floor(seconds / 3600)\r\n  if (interval >= 1) {\r\n    return `${interval} ساعت پیش`\r\n  }\r\n\r\n  interval = Math.floor(seconds / 60)\r\n  if (interval >= 1) {\r\n    return `${interval} دقیقه پیش`\r\n  }\r\n\r\n  return `همین الان`\r\n}\r\n\r\nexport function getTheMonthDays(date) {\r\n  const year = date.getFullYear() // gets the current year\r\n  const month = date.getMonth() // gets the current month (0-11)\r\n  const daysInMonth = new Date(year, month + 1, 0).getDate() // gets the number of days in the current month\r\n  return daysInMonth\r\n}\r\n","import React, { useState } from \"react\"\r\nimport \"./Post.css\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { timeSince } from \"../../Utils/DateTimeUtils\"\r\nimport Roles from \"../../constants/Roles\"\r\nimport { downloadFileFromApi } from \"../../Utils/UtilsFunctions\"\r\nimport APIEndpoints from \"../../constants/APIEndpoints\"\r\nimport { useStateValue } from \"../../context/StateProvider\"\r\nimport ICONS from \"../../constants/Icons\"\r\n\r\nconst Post = ({\r\n  role,\r\n  id,\r\n  images,\r\n  docs,\r\n  author,\r\n  date,\r\n  text,\r\n  isUpdated = false,\r\n  isHidden,\r\n  handleDelete,\r\n  customRef = null,\r\n}) => {\r\n  const [{ authentication }, dispatch] = useStateValue()\r\n  const [isHide, setIsHide] = useState(isHidden)\r\n\r\n  const handleHideShow = () => {\r\n    fetch(APIEndpoints.root + APIEndpoints.posts.toggleHideShow(id), {\r\n      headers: {\r\n        Authorization: \"Bearer \" + authentication.token,\r\n      },\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        setIsHide(!isHide)\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"post\" ref={customRef}>\r\n      <div className=\"image_header_container\">\r\n        <div className=\"post_header display_flex justify_content_space_between\">\r\n          <div className=\"post_share_with display_flex align_items_center\">\r\n            <img src={APIEndpoints.redirecter + author?.imageUrl} alt={author?.name} crossorigin=\"anonymous\" />\r\n            <div className=\"post_date\">\r\n              <p>\r\n                {author?.name} {author?.lastname}\r\n              </p>\r\n              <p style={{ fontSize: \"10px\" }}>\r\n                {timeSince(new Date(date))}\r\n                {isUpdated && \" بروزرسانی شد\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {role == Roles.ADMIN ? (\r\n            // Post Settings on left of Posts\r\n            <div className=\"post_settings\">\r\n              <span className=\"setting_icon cursor_pointer\">\r\n                <i className={ICONS.threeDots}></i>\r\n              </span>\r\n              <div className=\"setting_menu\">\r\n                <ul>\r\n                  <li className=\"setting_option\">\r\n                    <Link to={\"edit/\" + id} className=\"setting_option_details\">\r\n                      <i className={ICONS.pencilSquare}></i>\r\n                      <span>ویرایش پست</span>\r\n                    </Link>\r\n                  </li>\r\n                  {/* Handle Hide & UnHide of the Post */}\r\n                  <li className=\"setting_option\" onClick={handleHideShow}>\r\n                    <span className=\"setting_option_details\">\r\n                      {!isHide ? (\r\n                        <i className={ICONS.eyeSlashFill}></i>\r\n                      ) : (\r\n                        <i className={ICONS.eyeFill}></i>\r\n                      )}\r\n                      {!isHide ? (\r\n                        <span>پنهان کردن</span>\r\n                      ) : (\r\n                        <span>نمایش دادن</span>\r\n                      )}\r\n                    </span>\r\n                  </li>\r\n                  <li className=\"setting_option\" onClick={handleDelete}>\r\n                    <span className=\"setting_option_details\">\r\n                      <i className={ICONS.trashFill}></i>\r\n                      <span>حذف پست</span>\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div className=\"file_post_body display_flex flex_direction_column\">\r\n        {/* This is Text for each post */}\r\n        <div className=\"post_text\">\r\n          <p dangerouslySetInnerHTML={{ __html: text }}></p>\r\n        </div>\r\n        {/* For each item of image array render a post_file */}\r\n        <div className=\"post_images\">\r\n          {images?.map((item) => {\r\n            return <img src={APIEndpoints.redirecter + item} alt=\"\" key={item} crossorigin=\"anonymous\" />\r\n          })}\r\n        </div>\r\n        <div className=\"pdf_files_container\">\r\n          {/* For each item of pdf array render a post_file */}\r\n          {docs?.map((doc) => {\r\n            return (\r\n              <div className=\"post_file display_flex\" key={doc}>\r\n                <div className=\"files_icon_container display_flex\">\r\n                  <i className={ICONS.fileEarmarkPdfFill}></i>\r\n                  <p className=\"text_color display_flex align_items_center\">\r\n                    {doc.split(\"/\")[doc.split(\"/\").length - 1]}\r\n                  </p>\r\n                </div>\r\n                <div className=\"file_download_button\">\r\n                  <button\r\n                    className=\"btn_download display_flex cursor_pointer align_items_center justify_content_center\"\r\n                    type=\"button\"\r\n                    onClick={() => downloadFileFromApi(APIEndpoints.redirecter + doc)}\r\n                  >\r\n                    <span className=\"button_download_text\">دانلود</span>\r\n                    <span className=\"button_download_icon display_flex align_items_center justify_content_center\">\r\n                      <i className={ICONS.download}></i>\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","const Roles = {\r\n  ADMIN: \"ADMIN\",\r\n  STUDENT: \"STUDENT\",\r\n}\r\nexport default Roles\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport \"./PostManagement.css\"\r\nimport Post from \"../../components/Post/Post\"\r\nimport { useStateValue } from \"../../context/StateProvider\"\r\nimport Spinner from \"../../components/UI/Loading/Spinner\"\r\nimport useProtect from \"../../Hooks/useProtect\"\r\nimport Roles from \"../../constants/Roles\"\r\nimport APIEndpoints from \"../../constants/APIEndpoints\"\r\nimport BackDrop from \"../../components/UI/BackDrop/BackDrop\"\r\nimport MessageBox from \"../../components/UI/MessageBox/MessageBox\"\r\nimport ICONS from \"../../constants/Icons\"\r\nimport BtnTypes from \"../../constants/BtnTypes\"\r\n\r\nconst PostManagement = () => {\r\n  useProtect({ roles: [Roles.ADMIN] })\r\n  const [{ authentication }, dispatch] = useStateValue()\r\n  const [posts, setPosts] = useState([])\r\n  const [semester, setsemester] = useState()\r\n  const [department, setdepartment] = useState()\r\n  const [feildOfStudy, setfeildOfStudy] = useState()\r\n  const [hasMore, setHasMore] = useState(true)\r\n  const lastNode = useRef()\r\n  const [pagination, setPagination] = useState({ offset: 0, pageSize: 3 })\r\n  const [loading, setLoading] = useState(true)\r\n  const [fields, setFields] = useState([])\r\n  const [departments, setDepartments] = useState([])\r\n  const [semesters, setsemesters] = useState([])\r\n  const [requestParams, setRequestParams] = useState(``)\r\n  const [deleteModal, setDeleteModal] = useState(false)\r\n  const [postToDelete, setPostToDelete] = useState()\r\n  const [completeMsg, setCompleteMsg] = useState({ show: false, msg: \"\" })\r\n  let endpoint =\r\n    APIEndpoints.root +\r\n    APIEndpoints.posts.getAllPostsForAdmin +\r\n    `offset=${pagination.offset}&pageSize=${pagination.pageSize}`\r\n\r\n  // this function is for handing the infinite scrolling\r\n  const lastNodeReference = (node) => {\r\n    if (loading) return\r\n    if (lastNode.current) lastNode.current.disconnect()\r\n    lastNode.current = new IntersectionObserver((enteries) => {\r\n      if (enteries[0].isIntersecting) {\r\n        if (hasMore) {\r\n          setPagination({\r\n            offset: pagination.offset + 1,\r\n            pageSize: pagination.pageSize,\r\n          })\r\n        }\r\n      }\r\n    })\r\n    if (node) lastNode.current.observe(node)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(APIEndpoints.root + APIEndpoints.fieldOfStudy.getAll)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(res.statusText)\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setFields(data.content)\r\n      })\r\n  }, [])\r\n\r\n  // The authentication token must be read from somewhere in the frontend\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    fetch(endpoint + requestParams, {\r\n      method: \"GET\",\r\n      headers: { Authorization: \"Bearer \" + authentication.token },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(res.statusText)\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (data.totalPages - 1 > pagination.offset) {\r\n          setHasMore(true)\r\n        } else {\r\n          setHasMore(false)\r\n        }\r\n        const newPosts = [...posts, ...data.content].filter(\r\n          (obj, index, self) => index === self.findIndex((o) => o.id === obj.id)\r\n        )\r\n        setPosts(newPosts)\r\n        setLoading(false)\r\n      })\r\n  }, [pagination])\r\n\r\n  const showDeleteModal = (id) => {\r\n    setDeleteModal(true)\r\n    setPostToDelete(id)\r\n  }\r\n\r\n  const handleFilterButton = () => {\r\n    setPagination({ offset: 0, pageSize: 3 })\r\n    setPosts([])\r\n\r\n    let requestParam = \"\"\r\n    if (semester) {\r\n      requestParam += `&semester=${semester == \"همه\" ? \"%\" : semester}`\r\n    }\r\n    if (department) {\r\n      requestParam += `&department=${department == \"همه\" ? \"%\" : department}`\r\n    }\r\n    if (feildOfStudy) {\r\n      requestParam += `&fieldOfStudy=${feildOfStudy == \"همه\" ? \"%\" : feildOfStudy\r\n        }`\r\n    }\r\n    setRequestParams(requestParam)\r\n    fetch(endpoint + requestParam, {\r\n      method: \"GET\",\r\n      headers: { Authorization: \"Bearer \" + authentication.token },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(res.statusText)\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (data.totalPages - 1 > pagination.offset) {\r\n          setHasMore(true)\r\n        } else {\r\n          setHasMore(false)\r\n        }\r\n        setPosts(data.content)\r\n        setLoading(false)\r\n      })\r\n  }\r\n  const setfield = (e) => {\r\n    setDepartments([])\r\n    setfeildOfStudy(e.target.value)\r\n    const f = fields.find((item) => {\r\n      return item.fieldName == e.target.value\r\n    })\r\n    fetch(APIEndpoints.root + APIEndpoints.fieldOfStudy.depratments(f.id))\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(res.statusText)\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setDepartments(data)\r\n        let sem = []\r\n        for (let i = 1; i <= data[0].semesters; i++) sem.push(i)\r\n        setsemesters(sem)\r\n      })\r\n  }\r\n\r\n  const setDep = (e) => {\r\n    setdepartment(e)\r\n    const d = departments.find((item) => {\r\n      return item.departmentName == e\r\n    })\r\n    let sem = []\r\n    for (let i = 1; i <= d.semesters; i++) sem.push(i)\r\n    setsemesters(sem)\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    fetch(APIEndpoints.root + APIEndpoints.posts.deletePost(postToDelete), {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + authentication.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setDeleteModal(false)\r\n        if (res.ok) return res.json()\r\n        else throw new Error(res.statusText)\r\n      })\r\n      .then((data) => {\r\n        setCompleteMsg({ msg: data.message, show: true })\r\n        const newList = posts.filter((item) => item.id != postToDelete)\r\n        setPosts(newList)\r\n      })\r\n      .catch((error) => {\r\n        setCompleteMsg({ msg: error.message, show: true })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"posts_management\">\r\n      <div className=\"posts_management_tabHeader\">\r\n        <div className=\"posts_management_boxes\">\r\n          <div className=\"post_mana_box\">\r\n            <label>پوهنحی</label>\r\n            <select\r\n              id=\"type\"\r\n              value={feildOfStudy}\r\n              onChange={(e) => setfield(e)}\r\n              defaultValue=\"همه\"\r\n            >\r\n              <option>همه</option>\r\n              {fields.map((item) => {\r\n                return <option key={item.id}>{item.fieldName}</option>\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"post_mana_box\">\r\n            <label>دیپارتمنت</label>\r\n            <select\r\n              id=\"type\"\r\n              value={department}\r\n              onChange={(e) => setDep(e.target.value)}\r\n              defaultValue=\"همه\"\r\n            >\r\n              <option>همه</option>\r\n              {departments.map((item) => {\r\n                return <option key={item.id}>{item.departmentName}</option>\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"post_mana_box\">\r\n            <label>سمستر</label>\r\n            <select\r\n              id=\"type\"\r\n              value={semester}\r\n              onChange={(e) => setsemester(e.target.value)}\r\n              defaultValue=\"همه\"\r\n            >\r\n              <option>همه</option>\r\n              {semesters.map((sem) => {\r\n                return <option>{sem}</option>\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"posts_management_filter_btn\">\r\n          <button className=\"btn\" onClick={handleFilterButton}>\r\n            فیلتر\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content_of_PostManagement\">\r\n        <div className=\"content_of_posts_details\">\r\n          <div className=\"display_flex align_items_center justify_content_center flex_direction_column\">\r\n            {Array.from(new Set(posts)).map((item, index) => {\r\n              if (posts.length === index + 1) {\r\n                return (\r\n                  <div className=\"\">\r\n                    <Post\r\n                      key={item.id}\r\n                      role={Roles.ADMIN}\r\n                      author={item.author}\r\n                      date={item.dateTime}\r\n                      images={item.images}\r\n                      id={item.id}\r\n                      docs={item.docs}\r\n                      text={item.message}\r\n                      isUpdated={item.isUpdated}\r\n                      handleDelete={() => showDeleteModal(item.id)}\r\n                      customRef={lastNodeReference}\r\n                    />\r\n                  </div>\r\n                )\r\n              }\r\n              return (\r\n                <div className=\"\">\r\n                  <Post\r\n                    key={item.id}\r\n                    role={Roles.ADMIN}\r\n                    author={item.author}\r\n                    date={item.dateTime}\r\n                    images={item.images}\r\n                    id={item.id}\r\n                    docs={item.docs}\r\n                    isHidden={item.isHidden}\r\n                    isUpdated={item.isUpdated}\r\n                    text={item.message}\r\n                    handleDelete={() => showDeleteModal(item.id)}\r\n                  />\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n          <section className=\"end_of_posts\">\r\n            {hasMore && <Spinner />}\r\n            {!hasMore && (\r\n              <div className=\"text_align_center\">\r\n                <h5 className=\"text_color text_align_center\">\r\n                  {posts.length > 0 ? \"آخرین پست\" : \"پست های مورد نظر یافت نشد\"}{\" \"}\r\n                </h5>\r\n                <h6 style={{ paddingTop: \"10px\" }}>\r\n                  تعداد کل پست ها {posts.length}\r\n                </h6>\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n      </div>\r\n      <BackDrop show={deleteModal}>\r\n        {\r\n          <MessageBox\r\n            messageType=\"asking\"\r\n            firstBtn={{\r\n              btnText: \"بلی\",\r\n              btnType: BtnTypes.danger,\r\n              onClick: handleDelete,\r\n            }}\r\n            secondBtn={{\r\n              btnText: \"نخیر\",\r\n              onClick: () => setDeleteModal(false),\r\n            }}\r\n            message={\"برای حذف شدن پست از سیستم مطمئن هستید؟\"}\r\n            iconType={ICONS.asking}\r\n          />\r\n        }\r\n      </BackDrop>\r\n      <BackDrop show={completeMsg.show}>\r\n        {\r\n          <MessageBox\r\n            messageType=\"info\"\r\n            firstBtn={{\r\n              btnText: \"تایید\",\r\n              onClick: () => setCompleteMsg({ show: false, msg: \"\" }),\r\n            }}\r\n            message={completeMsg.msg}\r\n            iconType={ICONS.info}\r\n          />\r\n        }\r\n      </BackDrop>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostManagement\r\n"],"names":["roles","id","useStateValue","authentication","navigate","useNavigate","useEffect","isAuthenticated","some","item","includes","Roles","userId","timeSince","date","now","Date","seconds","Math","floor","interval","role","images","docs","author","text","isUpdated","isHidden","handleDelete","customRef","useState","isHide","setIsHide","className","ref","src","APIEndpoints","imageUrl","alt","name","crossorigin","lastname","style","fontSize","ICONS","to","onClick","fetch","headers","Authorization","token","then","res","ok","dangerouslySetInnerHTML","__html","map","doc","split","length","type","downloadFileFromApi","ADMIN","STUDENT","useProtect","posts","setPosts","semester","setsemester","department","setdepartment","feildOfStudy","setfeildOfStudy","hasMore","setHasMore","lastNode","useRef","offset","pageSize","pagination","setPagination","loading","setLoading","fields","setFields","departments","setDepartments","semesters","setsemesters","requestParams","setRequestParams","deleteModal","setDeleteModal","postToDelete","setPostToDelete","show","msg","completeMsg","setCompleteMsg","endpoint","lastNodeReference","node","current","disconnect","IntersectionObserver","enteries","isIntersecting","observe","json","Error","statusText","data","content","method","totalPages","newPosts","filter","obj","index","self","findIndex","o","showDeleteModal","value","onChange","e","target","f","find","fieldName","sem","i","push","setfield","defaultValue","d","departmentName","setDep","requestParam","Array","from","Set","Post","dateTime","message","Spinner","paddingTop","BackDrop","MessageBox","messageType","firstBtn","btnText","btnType","BtnTypes","newList","catch","error","secondBtn","iconType"],"sourceRoot":""}