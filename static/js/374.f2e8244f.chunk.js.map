{"version":3,"file":"static/js/374.f2e8244f.chunk.js","mappings":"2JA+BA,IA1BmB,SAAH,GAAuB,IAAjBA,EAAK,EAALA,MAAOC,EAAE,EAAFA,GAC3B,GAAuCC,EAAAA,EAAAA,MAAe,eAA7CC,EAAc,KAAdA,eACHC,GAD6B,MAClBC,EAAAA,EAAAA,QACjBC,EAAAA,EAAAA,YAAU,WACHH,EAAeI,iBAKlBJ,EAAeI,iBACdJ,EAAeH,MAAMQ,MAAK,SAACC,GAAI,OAAKT,EAAMU,SAASD,EAAK,IAMzDN,EAAeH,MAAMU,SAASC,EAAAA,EAAAA,UAC9BV,GACAA,IAAoB,OAAdE,QAAc,IAAdA,OAAc,EAAdA,EAAgBS,SAEtBR,EAAS,KARTA,EAAS,KAPTA,EAAS,SAkBb,GAAG,GACL,C,qBCzBA,IAJc,CACZS,MAAO,QACPC,QAAS,U,4ICoBX,EAlBe,SAAH,GAA8D,IAAxDC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAkB,EAAlBA,mBAAoBC,EAAW,EAAXA,YACrD,OACE,iBAAMC,UAAU,SAAQ,UACtB,iBAAKA,UAAU,gEAA+D,WAC5E,kBAAOJ,MAAOA,EAAOC,SAAUA,EAAUI,YAAaF,KACtD,oBACEC,UAAU,qGACVE,KAAK,SACLC,QAASL,EAAmB,WAE5B,cAAGE,UAAS,UAAKI,EAAAA,EAAAA,OAAY,oBAC7B,0BAAM,0CAKhB,E,uCCiBA,EAhCgB,SAAH,GAAoC,IAA9BC,EAAW,EAAXA,YAAaC,EAAS,EAATA,UAC9B,OACE,gBAAKN,UAAU,qBAAqBO,IAAKD,EAAU,UACjD,UAAC,KAAI,CAACE,GAAI,aAAyB,OAAXH,QAAW,IAAXA,OAAW,EAAXA,EAAavB,IAAG,WACtC,iBAAKkB,UAAU,wBAAuB,WACpC,gBAAKA,UAAU,4BACf,gBAAKA,UAAU,6EAA4E,UACzF,gBAAKS,IAAKC,EAAAA,EAAAA,YAAqC,OAAXL,QAAW,IAAXA,OAAW,EAAXA,EAAaM,kBAIrD,iBAAKX,UAAU,uBAAsB,WACnC,iBAAKA,UAAU,gGAA+F,WAC5G,uBAAe,OAAXK,QAAW,IAAXA,OAAW,EAAXA,EAAaO,QACjB,uBAAe,OAAXP,QAAW,IAAXA,OAAW,EAAXA,EAAaQ,eAEnB,iBAAKb,UAAU,uGAAsG,WACnH,0BACE,0BAAkB,OAAXK,QAAW,IAAXA,OAAW,EAAXA,EAAaS,cACpB,0BAAM,6CAER,0BACE,0BAAkB,OAAXT,QAAW,IAAXA,OAAW,EAAXA,EAAaU,cACpB,0BAAM,wEAOpB,E,kDC2QA,EAjSiB,YACfC,EAAAA,EAAAA,GAAW,CAAEnC,MAAO,CAACW,EAAAA,EAAAA,SACrB,IAAMP,GAAWC,EAAAA,EAAAA,MACjB,GAAuCH,EAAAA,EAAAA,MAAe,eAA7CC,EAAc,KAAdA,eAAkBiC,EAAQ,KACnC,GAAgCC,EAAAA,EAAAA,YAAU,eAAnCC,EAAQ,KAAEC,EAAW,KAC5B,GAAoCF,EAAAA,EAAAA,YAAU,eAAvCH,EAAU,KAAEM,EAAa,KAChC,GAAwCH,EAAAA,EAAAA,YAAU,eAA3CI,EAAY,KAAEC,EAAe,KACpC,GAA8BL,EAAAA,EAAAA,WAAS,GAAK,eAArCM,EAAO,KAAEC,EAAU,KACpBC,GAAWC,EAAAA,EAAAA,UACjB,GAAoCT,EAAAA,EAAAA,UAAS,CAAEU,OAAQ,EAAGC,SAAU,KAAK,eAAlEC,EAAU,KAAEC,EAAa,KAChC,GAA8Bb,EAAAA,EAAAA,WAAS,GAAK,eAArCc,EAAO,KAAEC,EAAU,KAC1B,GAAgCf,EAAAA,EAAAA,UAAS,IAAG,eAArCgB,EAAQ,KAAEC,EAAW,KAC5B,GAA4BjB,EAAAA,EAAAA,UAAS,IAAG,eAAjCkB,EAAM,KAAEC,EAAS,KACxB,GAAsCnB,EAAAA,EAAAA,UAAS,IAAG,gBAA3CoB,GAAW,MAAEC,GAAc,MAClC,IAAkCrB,EAAAA,EAAAA,UAAS,IAAG,iBAAvCsB,GAAS,MAAEC,GAAY,MAC9B,IAA0CvB,EAAAA,EAAAA,UAAS,IAAG,iBAA/CwB,GAAa,MAAEC,GAAgB,MACtC,IAAwBzB,EAAAA,EAAAA,YAAU,iBAA3B0B,GAAI,MAAEC,GAAO,MACpB,IAA0C3B,EAAAA,EAAAA,UAAS,IAAG,iBAA/C4B,GAAa,MAAEC,GAAgB,OAEtC5D,EAAAA,EAAAA,YAAU,WACR6D,MAAMtC,EAAAA,EAAAA,KAAoBA,EAAAA,EAAAA,aAAAA,QACvBuC,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAEX,MAAM,IAAIC,MAAMH,EAAII,WAExB,IACCL,MAAK,SAACM,GACLlB,EAAUkB,EAAKC,QACjB,IAEFR,MACEtC,EAAAA,EAAAA,KACEA,EAAAA,EAAAA,SAAAA,OAA4B,iBAClBoB,EAAWF,OAAM,qBAAaE,EAAWD,UACrD,CACE4B,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAY3E,EAAe4E,SAI7CX,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,MAEf,IACCH,MAAK,SAACM,GACDA,EAAKM,WAAa,EAAI/B,EAAWF,OACnCH,GAAW,GAEXA,GAAW,GAEboB,GAAQU,GACRpB,EAAY2B,MAAMC,KAAK,IAAIC,IAAI,GAAD,eAAK9B,IAAQ,OAAKqB,EAAKC,aACrDvB,GAAW,EACb,GACJ,GAAG,IAEH,IAAMgC,GAAoB,SAACC,GACrBlC,IACAN,EAASyC,SAASzC,EAASyC,QAAQC,aACvC1C,EAASyC,QAAU,IAAIE,sBAAqB,SAACC,GACvCA,EAAS,GAAGC,gBACV/C,IAAYQ,GAAWY,GAAKiB,YAAc/B,EAAWF,QACvDoB,MACEtC,EAAAA,EAAAA,KACEA,EAAAA,EAAAA,SAAAA,OAA4B,iBAClBoB,EAAWF,OAAM,qBAAaE,EAAWD,UACnDiB,GACF,CACEW,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAY3E,EAAe4E,SAI7CX,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,MAEf,IACCH,MAAK,SAACM,GACDA,EAAKM,WAAa,EAAI/B,EAAWF,OACnCH,GAAW,GAEXA,GAAW,GAEb,IAAM+C,EAAU,kBAAItC,IAAQ,OAAKqB,EAAKC,UAASiB,QAC7C,SAACC,EAAKC,EAAOC,GAAI,OACfD,IAAUC,EAAKC,WAAU,SAACC,GAAC,OAAKA,EAAEhG,KAAO4F,EAAI5F,EAAE,GAAC,IAEpD+D,GAAQU,GACRpB,EAAYqC,GACZvC,GAAW,GACXF,EAAc,CACZH,OAAQE,EAAWF,OAAS,EAC5BC,SAAUC,EAAWD,UAEzB,GAGR,IACIqC,GAAMxC,EAASyC,QAAQY,QAAQb,GACrC,EA8EA,OACE,iBAAKlE,UAAU,wBAAuB,WAEpC,iBAAKA,UAAU,yFAAwF,WACrG,SAACgF,EAAA,EAAM,CACLC,KAAM,oDACN9E,QAAS,WACPlB,EAAS,sBACTgC,EAAS,CACPf,KAAMgF,EAAAA,GAAAA,oCAEV,KAEF,SAACF,EAAA,EAAM,CACLC,KAAK,gEACL9E,QAAS,WACPlB,EAAS,iBACX,QAKJ,iBAAKe,UAAU,6EAA4E,WACzF,iBAAKA,UAAU,yBAAwB,WACrC,iBAAKA,UAAU,gBAAe,WAC5B,2BAAO,0CACP,oBACElB,GAAG,OACHc,MAAO0B,EACP6D,aAAc,qBACdtF,SAAU,SAACuF,GAAC,OAxGP,SAACA,GAChB7D,EAAgB6D,EAAEC,OAAOzF,OACzB,IAAM0F,EAAIlD,EAAOmD,MAAK,SAACjG,GACrB,OAAOA,EAAKkG,WAAaJ,EAAEC,OAAOzF,KACpC,IACAoD,MAAMtC,EAAAA,EAAAA,KAAoBA,EAAAA,EAAAA,aAAAA,YAAsC4E,EAAExG,KAC/DmE,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAEX,MAAM,IAAIC,MAAMH,EAAII,WAExB,IACCL,MAAK,SAACM,GACLhB,GAAegB,GAEf,IADA,IAAIkC,EAAM,GACDC,EAAI,EAAGA,GAAKnC,EAAK,GAAGf,UAAWkD,IAAKD,EAAIE,KAAKD,GACtDjD,GAAagD,EACf,GACJ,CAqF6BG,CAASR,EAAE,EAAC,WAE7B,4BAAQ,uBACD,OAANhD,QAAM,IAANA,OAAM,EAANA,EAAQyD,KAAI,SAACvG,GACZ,OAAO,4BAAuBA,EAAKkG,WAAflG,EAAKR,GAC3B,WAGJ,iBAAKkB,UAAU,gBAAe,WAC5B,2BAAO,4DACP,oBACElB,GAAG,OACHc,MAAOmB,EACPoE,aAAc,qBACdtF,SAAU,SAACuF,GAAC,OAlGT,SAACA,GACd/D,EAAc+D,GAKd,IAJA,IAAMU,EAAIxD,GAAYiD,MAAK,SAACjG,GAC1B,OAAOA,EAAKyG,gBAAkBX,CAChC,IACIK,EAAM,GACDC,EAAI,EAAGA,GAAKI,EAAEtD,UAAWkD,IAAKD,EAAIE,KAAKD,GAChDjD,GAAagD,EACf,CA0F6BO,CAAOZ,EAAEC,OAAOzF,MAAM,EAAC,WAExC,4BAAQ,uBACI,OAAX0C,SAAW,IAAXA,QAAW,EAAXA,GAAauD,KAAI,SAACvG,GACjB,OAAO,4BAAuBA,EAAKyG,gBAAfzG,EAAKR,GAC3B,WAGJ,iBAAKkB,UAAU,gBAAe,WAC5B,2BAAO,oCACP,oBACElB,GAAG,OACHc,MAAOuB,EACPgE,aAAc,qBACdtF,SAAU,SAACuF,GAAC,OAAKhE,EAAYgE,EAAEC,OAAOzF,MAAM,EAAC,WAE7C,4BAAQ,uBACP4C,GAAUqD,KAAI,SAACvG,GACd,OAAO,4BAAoBA,GAAPA,EACtB,cAIN,SAAC,EAAM,CACLM,MAAO8C,GACP7C,SAAU,SAACuF,GAAC,OAAKzC,GAAiByC,EAAEC,OAAOzF,MAAM,EACjDE,mBAlHmB,SAACsF,GAC1BnD,GAAW,GACXmD,EAAEa,iBAEF,IAAIC,EAAM,GACNxD,KACFwD,GAAO,aAAgC,sBAAjBxD,GAAyB,IAAMA,KAEnDpB,IACF4E,GAAO,kBAAoC,sBAAhB5E,EAAwB,IAAMA,IAEvDH,IACF+E,GAAO,cAA4B,sBAAZ/E,EAAoB,IAAMA,IAE/CJ,IACFmF,GAAO,gBAAgC,sBAAdnF,EAAsB,IAAMA,IAEvDgC,GAAiBmD,GACjBlD,MACEtC,EAAAA,EAAAA,KACEA,EAAAA,EAAAA,SAAAA,OAA4B,4BACPoB,EAAWD,UAChCqE,EACF,CACEzC,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAY3E,EAAe4E,SAI7CX,MAAK,SAACC,GAAG,OAAKA,EAAIE,MAAM,IACxBH,MAAK,SAACM,GACDA,EAAKM,WAAa,EAAI,EACxBpC,GAAW,GAEXA,GAAW,GAEbQ,GAAW,GACXE,EAAYoB,EAAKC,SACjBX,GAAQU,GACRxB,GAAc,kBAAKD,GAAU,IAAEF,OAAQ,IACzC,GACJ,EAyEQ7B,YAAY,yEAKhB,iBAAKC,UAAU,mDAAkD,UACtD,OAARkC,QAAQ,IAARA,OAAQ,EAARA,EAAU2D,KAAI,SAACM,EAASxB,GACvB,OAAIA,EAAQ,GAAKzC,EAASkE,QAEtB,SAAC,EAAO,CAEN/F,YAAa8F,EACb7F,UAAW2D,IAFNkC,EAAQrH,KAMZ,SAAC,EAAO,CAAkBuB,YAAa8F,GAAzBA,EAAQrH,GAC/B,KACA,qBAASkB,UAAU,uCAAsC,UACtDwB,IAAW,SAAC6E,EAAA,EAAO,KAClB7E,GAAWU,EAASkE,OAAS,IAC7B,iCACE,wBAAI,6DACJ,gBAAIE,MAAO,CAAEC,WAAY,QAAS,UAAC,oFAChBrE,EAASkE,cAI9B5E,GAA8B,GAAnBU,EAASkE,SAAe,wBAAI,kFAKnD,C","sources":["Hooks/useProtect.js","constants/Roles.js","components/Search/Search.jsx","components/Student/Student.jsx","pages/Students/Students.js"],"sourcesContent":["import { useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useStateValue } from \"../context/StateProvider\"\r\nimport Roles from \"../constants/Roles\"\r\n\r\nconst useProtect = ({ roles, id }) => {\r\n  const [{ authentication }, dispatch] = useStateValue()\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    if (!authentication.isAuthenticated) {\r\n      navigate(\"/login\")\r\n      return\r\n    }\r\n    if (\r\n      authentication.isAuthenticated &&\r\n      !authentication.roles.some((item) => roles.includes(item))\r\n    ) {\r\n      navigate(\"/\")\r\n      return\r\n    }\r\n    if (\r\n      authentication.roles.includes(Roles.STUDENT) &&\r\n      id &&\r\n      id != authentication?.userId\r\n    ) {\r\n      navigate(\"/\")\r\n      return\r\n    }\r\n  }, [])\r\n}\r\n\r\nexport default useProtect\r\n","const Roles = {\r\n  ADMIN: \"ADMIN\",\r\n  STUDENT: \"STUDENT\",\r\n}\r\nexport default Roles\r\n","import React from \"react\"\r\nimport \"./Search.css\"\r\nimport ICONS from \"../../constants/Icons\"\r\n\r\nconst Search = ({ value, onChange, handleSearchButton, placeHolder }) => {\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"search__input display_flex align_items_center border_radius_8\">\r\n        <input value={value} onChange={onChange} placeholder={placeHolder} />\r\n        <button\r\n          className=\"btn search__button background_color_transparent cursor_pointer outline_none text_color border_none\"\r\n          type=\"submit\"\r\n          onClick={handleSearchButton}\r\n        >\r\n          <i className={`${ICONS.search} search__icon`}></i>\r\n          <span>جستجو</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Student.css\"\r\nimport APIEndpoints from \"../../constants/APIEndpoints\"\r\n\r\nconst Student = ({ studentInfo, customRef }) => {\r\n  return (\r\n    <div className=\"student box_shadow\" ref={customRef}>\r\n      <Link to={\"/profile/\" + studentInfo?.id}>\r\n        <div className=\"student_title_profile\">\r\n          <div className=\"student_profile_header\"></div>\r\n          <div className=\"student_profile_img display_flex align_items_center justify_content_center\">\r\n            <img src={APIEndpoints.redirecter + studentInfo?.imageUrl} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"student_descriptions\">\r\n          <div className=\"student_personal_info display_flex align_items_center flex_direction_column text_align_center\">\r\n            <p>{studentInfo?.name}</p>\r\n            <p>{studentInfo?.lastname}</p>\r\n          </div>\r\n          <div className=\"student_university_info display_flex align_items_center justify_content_space_around border_radius_8\">\r\n            <p>\r\n              <span>{studentInfo?.fieldStudy}</span>\r\n              <span>پوهنحی</span>\r\n            </p>\r\n            <p>\r\n              <span>{studentInfo?.department}</span>\r\n              <span>دیپارتمنت</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Student\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport \"./Students.css\"\r\nimport Search from \"../../components/Search/Search\"\r\nimport { useStateValue } from \"../../context/StateProvider\"\r\nimport Student from \"../../components/Student/Student\"\r\nimport useProtect from \"../../Hooks/useProtect\"\r\nimport Roles from \"../../constants/Roles\"\r\nimport APIEndpoints from \"../../constants/APIEndpoints\"\r\nimport Spinner from \"../../components/UI/Loading/Spinner\"\r\nimport Button from \"../../components/UI/Button/Button\"\r\nimport { actionTypes } from \"../../context/reducer\"\r\n\r\nconst Students = () => {\r\n  useProtect({ roles: [Roles.ADMIN] })\r\n  const navigate = useNavigate()\r\n  const [{ authentication }, dispatch] = useStateValue()\r\n  const [semester, setsemester] = useState()\r\n  const [department, setdepartment] = useState()\r\n  const [feildOfStudy, setfeildOfStudy] = useState()\r\n  const [hasMore, setHasMore] = useState(true)\r\n  const lastNode = useRef()\r\n  const [pagination, setPagination] = useState({ offset: 0, pageSize: 10 })\r\n  const [loading, setLoading] = useState(true)\r\n  const [students, setStudents] = useState([])\r\n  const [fields, setFields] = useState([])\r\n  const [departments, setDepartments] = useState([])\r\n  const [semesters, setsemesters] = useState([])\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\")\r\n  const [page, setPage] = useState()\r\n  const [requestParams, setRequestParams] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    fetch(APIEndpoints.root + APIEndpoints.fieldOfStudy.getAll)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(res.statusText)\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setFields(data.content)\r\n      })\r\n\r\n    fetch(\r\n      APIEndpoints.root +\r\n        APIEndpoints.students.getAll +\r\n        `offset=${pagination.offset}&pageSize=${pagination.pageSize}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + authentication.token,\r\n        },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (data.totalPages - 1 > pagination.offset) {\r\n          setHasMore(true)\r\n        } else {\r\n          setHasMore(false)\r\n        }\r\n        setPage(data)\r\n        setStudents(Array.from(new Set([...students, ...data.content])))\r\n        setLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  const lastNodeReference = (node) => {\r\n    if (loading) return\r\n    if (lastNode.current) lastNode.current.disconnect()\r\n    lastNode.current = new IntersectionObserver((enteries) => {\r\n      if (enteries[0].isIntersecting) {\r\n        if (hasMore && !loading && page.totalPages >= pagination.offset) {\r\n          fetch(\r\n            APIEndpoints.root +\r\n              APIEndpoints.students.getAll +\r\n              `offset=${pagination.offset}&pageSize=${pagination.pageSize}` +\r\n              requestParams,\r\n            {\r\n              method: \"GET\",\r\n              headers: {\r\n                Authorization: \"Bearer \" + authentication.token,\r\n              },\r\n            }\r\n          )\r\n            .then((res) => {\r\n              if (res.ok) {\r\n                return res.json()\r\n              }\r\n            })\r\n            .then((data) => {\r\n              if (data.totalPages - 1 > pagination.offset) {\r\n                setHasMore(true)\r\n              } else {\r\n                setHasMore(false)\r\n              }\r\n              const newList = [...students, ...data.content].filter(\r\n                (obj, index, self) =>\r\n                  index === self.findIndex((o) => o.id === obj.id)\r\n              )\r\n              setPage(data)\r\n              setStudents(newList)\r\n              setLoading(false)\r\n              setPagination({\r\n                offset: pagination.offset + 1,\r\n                pageSize: pagination.pageSize,\r\n              })\r\n            })\r\n        }\r\n      }\r\n    })\r\n    if (node) lastNode.current.observe(node)\r\n  }\r\n\r\n  // create an array with unique data\r\n\r\n  const setfield = (e) => {\r\n    setfeildOfStudy(e.target.value)\r\n    const f = fields.find((item) => {\r\n      return item.fieldName == e.target.value\r\n    })\r\n    fetch(APIEndpoints.root + APIEndpoints.fieldOfStudy.depratments(f.id))\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(res.statusText)\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setDepartments(data)\r\n        let sem = []\r\n        for (let i = 1; i <= data[0].semesters; i++) sem.push(i)\r\n        setsemesters(sem)\r\n      })\r\n  }\r\n  const setDep = (e) => {\r\n    setdepartment(e)\r\n    const d = departments.find((item) => {\r\n      return item.departmentName == e\r\n    })\r\n    let sem = []\r\n    for (let i = 1; i <= d.semesters; i++) sem.push(i)\r\n    setsemesters(sem)\r\n  }\r\n\r\n  const handleSearchButton = (e) => {\r\n    setLoading(true)\r\n    e.preventDefault()\r\n\r\n    let url = \"\"\r\n    if (searchKeyword) {\r\n      url += \"&keyword=\" + (searchKeyword == \"همه\" ? \"%\" : searchKeyword)\r\n    }\r\n    if (feildOfStudy) {\r\n      url += \"&fieldOfStudy=\" + (feildOfStudy == \"همه\" ? \"%\" : feildOfStudy)\r\n    }\r\n    if (semester) {\r\n      url += \"&semester=\" + (semester == \"همه\" ? \"%\" : semester)\r\n    }\r\n    if (department) {\r\n      url += \"&department=\" + (department == \"همه\" ? \"%\" : department)\r\n    }\r\n    setRequestParams(url)\r\n    fetch(\r\n      APIEndpoints.root +\r\n        APIEndpoints.students.getAll +\r\n        `offset=0&pageSize=${pagination.pageSize}` +\r\n        url,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + authentication.token,\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.totalPages - 1 > 0) {\r\n          setHasMore(true)\r\n        } else {\r\n          setHasMore(false)\r\n        }\r\n        setLoading(false)\r\n        setStudents(data.content)\r\n        setPage(data)\r\n        setPagination({ ...pagination, offset: 0 })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"students_page fade_in\">\r\n      {/* add new student */}\r\n      <div className=\"students_add_new_student display_flex align_items_center justify_content_space_between\">\r\n        <Button\r\n          text={\"محصل جدید\"}\r\n          onClick={() => {\r\n            navigate(\"/admin/add-student\")\r\n            dispatch({\r\n              type: actionTypes.REMOVE_STUDENT_REGISTERATION_STATE,\r\n            })\r\n          }}\r\n        />\r\n        <Button\r\n          text=\"محتوای جدید\"\r\n          onClick={() => {\r\n            navigate(\"/admin/newpost\")\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* some button for filtering */}\r\n      <div className=\"students_filter_btn display_flex align_items_center justify_content_center\">\r\n        <div className=\"posts_management_boxes\">\r\n          <div className=\"post_mana_box\">\r\n            <label>پوهنحی</label>\r\n            <select\r\n              id=\"type\"\r\n              value={feildOfStudy}\r\n              defaultValue={\"همه\"}\r\n              onChange={(e) => setfield(e)}\r\n            >\r\n              <option>همه</option>\r\n              {fields?.map((item) => {\r\n                return <option key={item.id}>{item.fieldName}</option>\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"post_mana_box\">\r\n            <label>دیپارتمنت</label>\r\n            <select\r\n              id=\"type\"\r\n              value={department}\r\n              defaultValue={\"همه\"}\r\n              onChange={(e) => setDep(e.target.value)}\r\n            >\r\n              <option>همه</option>\r\n              {departments?.map((item) => {\r\n                return <option key={item.id}>{item.departmentName}</option>\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"post_mana_box\">\r\n            <label>سمستر</label>\r\n            <select\r\n              id=\"type\"\r\n              value={semester}\r\n              defaultValue={\"همه\"}\r\n              onChange={(e) => setsemester(e.target.value)}\r\n            >\r\n              <option>همه</option>\r\n              {semesters.map((item) => {\r\n                return <option key={item}>{item}</option>\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <Search\r\n          value={searchKeyword}\r\n          onChange={(e) => setSearchKeyword(e.target.value)}\r\n          handleSearchButton={handleSearchButton}\r\n          placeHolder=\"جستجوی محصل...\"\r\n        />\r\n      </div>\r\n\r\n      {/* All Students Here */}\r\n      <div className=\"all_students display_flex justify_content_center\">\r\n        {students?.map((student, index) => {\r\n          if (index + 1 == students.length) {\r\n            return (\r\n              <Student\r\n                key={student.id}\r\n                studentInfo={student}\r\n                customRef={lastNodeReference}\r\n              />\r\n            )\r\n          }\r\n          return <Student key={student.id} studentInfo={student} />\r\n        })}\r\n        <section className=\"students_not_found text_align_center\">\r\n          {hasMore && <Spinner />}\r\n          {!hasMore && students.length > 0 && (\r\n            <>\r\n              <h5>آخرین محصل</h5>\r\n              <h6 style={{ paddingTop: \"10px\" }}>\r\n                تعداد کل محصلین {students.length}\r\n              </h6>\r\n            </>\r\n          )}\r\n          {!hasMore && students.length == 0 && <h5>محصل یافت نشد!</h5>}\r\n        </section>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Students\r\n"],"names":["roles","id","useStateValue","authentication","navigate","useNavigate","useEffect","isAuthenticated","some","item","includes","Roles","userId","ADMIN","STUDENT","value","onChange","handleSearchButton","placeHolder","className","placeholder","type","onClick","ICONS","studentInfo","customRef","ref","to","src","APIEndpoints","imageUrl","name","lastname","fieldStudy","department","useProtect","dispatch","useState","semester","setsemester","setdepartment","feildOfStudy","setfeildOfStudy","hasMore","setHasMore","lastNode","useRef","offset","pageSize","pagination","setPagination","loading","setLoading","students","setStudents","fields","setFields","departments","setDepartments","semesters","setsemesters","searchKeyword","setSearchKeyword","page","setPage","requestParams","setRequestParams","fetch","then","res","ok","json","Error","statusText","data","content","method","headers","Authorization","token","totalPages","Array","from","Set","lastNodeReference","node","current","disconnect","IntersectionObserver","enteries","isIntersecting","newList","filter","obj","index","self","findIndex","o","observe","Button","text","actionTypes","defaultValue","e","target","f","find","fieldName","sem","i","push","setfield","map","d","departmentName","setDep","preventDefault","url","student","length","Spinner","style","paddingTop"],"sourceRoot":""}