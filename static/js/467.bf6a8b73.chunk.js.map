{"version":3,"file":"static/js/467.bf6a8b73.chunk.js","mappings":"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","sources":["Hooks/useProtect.js","constants/Roles.js","pages/NewPost/NewPost.jsx"],"sourcesContent":["import { useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useStateValue } from \"../context/StateProvider\"\r\nimport Roles from \"../constants/Roles\"\r\n\r\nconst useProtect = ({ roles, id }) => {\r\n  const [{ authentication }, dispatch] = useStateValue()\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    if (!authentication.isAuthenticated) {\r\n      navigate(\"/login\")\r\n      return\r\n    }\r\n    if (\r\n      authentication.isAuthenticated &&\r\n      !authentication.roles.some((item) => roles.includes(item))\r\n    ) {\r\n      navigate(\"/\")\r\n      return\r\n    }\r\n    if (\r\n      authentication.roles.includes(Roles.STUDENT) &&\r\n      id &&\r\n      id != authentication?.userId\r\n    ) {\r\n      navigate(\"/\")\r\n      return\r\n    }\r\n  }, [])\r\n}\r\n\r\nexport default useProtect\r\n","const Roles = {\r\n  ADMIN: \"ADMIN\",\r\n  STUDENT: \"STUDENT\",\r\n}\r\nexport default Roles\r\n","import React, { useEffect, useState } from \"react\"\r\nimport ReactQuill from \"react-quill\"\r\nimport \"react-quill/dist/quill.snow.css\"\r\nimport \"./NewPost.css\"\r\nimport { useStateValue } from \"../../context/StateProvider\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport useProtect from \"../../Hooks/useProtect\"\r\nimport Roles from \"../../constants/Roles\"\r\nimport BackDrop from \"../../components/UI/BackDrop/BackDrop\"\r\nimport MessageBox from \"../../components/UI/MessageBox/MessageBox\"\r\nimport ICONS from \"../../constants/Icons\"\r\nimport APIEndpoints from \"../../constants/APIEndpoints\"\r\n\r\nconst NewPost = () => {\r\n  // this is for security purpose\r\n  useProtect({ roles: [Roles.ADMIN] })\r\n  const navigate = useNavigate()\r\n  const [{ authentication }, dispatch] = useStateValue()\r\n  const [description, setDescription] = useState(\"\")\r\n  const [semester, setsemester] = useState(\"\")\r\n  const [department, setdepartment] = useState(\"\")\r\n  const [fieldOfStudy, setfeildOfStudy] = useState(\"\")\r\n  const [isPublic, setIsPublic] = useState(true)\r\n  const [files, setfiles] = useState([])\r\n  const [fields, setFields] = useState([])\r\n  const [departments, setDepartments] = useState([])\r\n  const [semesters, setsemesters] = useState([])\r\n  const [completeMsg, setCompleteMsg] = useState({ show: false, msg: \"\" })\r\n\r\n  useEffect(() => {\r\n    fetch(APIEndpoints.root + APIEndpoints.fieldOfStudy.getAll)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(res.statusText)\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setFields(data.content)\r\n      })\r\n  }, [])\r\n\r\n  // sends information to the api\r\n  const sendInfo = () => {\r\n    const body = {\r\n      fieldOfStudy: fieldOfStudy,\r\n      department: department,\r\n      message: description,\r\n      authorId: authentication.userId,\r\n      semester: semester,\r\n      isPublic: isPublic == \"صفحه اصلی\" ? true : false,\r\n    }\r\n    fetch(APIEndpoints.root + APIEndpoints.posts.addPost, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + authentication.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(res.statusText)\r\n        }\r\n      })\r\n      .then((data) => {\r\n        // now send the file\r\n        if (files.length > 0) {\r\n          const formData = new FormData()\r\n          for (let f in files) {\r\n            formData.append(\"files\", files[f])\r\n          }\r\n          fetch(data.filesUrl, {\r\n            method: \"POST\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + authentication.token,\r\n            },\r\n            body: formData,\r\n          }).then((res) => {\r\n            if (res.ok) {\r\n              setCompleteMsg({ show: true, msg: \"پست با موفقیت ارسال شد!\" })\r\n            }\r\n          })\r\n        } else {\r\n          setCompleteMsg({ show: true, msg: \"پست با موفقیت ارسال شد!\" })\r\n        }\r\n      })\r\n  }\r\n\r\n  const fieldOfStudeyInputHandling = (e) => {\r\n    setfeildOfStudy(e.target.value)\r\n    const f = fields.find((item) => {\r\n      return item.fieldName == e.target.value\r\n    })\r\n    fetch(APIEndpoints.root + APIEndpoints.fieldOfStudy.depratments(f.id))\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(res.statusText)\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setDepartments(data)\r\n        let sem = []\r\n        for (let i = 1; i <= data[0].semesters; i++) sem.push(i)\r\n        setsemesters(sem)\r\n      })\r\n  }\r\n\r\n  const setDep = (e) => {\r\n    setdepartment(e)\r\n    const d = departments.find((item) => {\r\n      return item.departmentName == e\r\n    })\r\n    let sem = []\r\n    for (let i = 1; i <= d.semesters; i++) sem.push(i)\r\n    setsemesters(sem)\r\n  }\r\n  return (\r\n    <div className=\"new_post fade_in\">\r\n      <div className=\"post_description display_flex flex_direction_column\">\r\n        <div className=\"editorContainer\">\r\n          <ReactQuill\r\n            className=\"editor\"\r\n            theme=\"snow\"\r\n            value={description}\r\n            onChange={setDescription}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"post_file_img display_flex\">\r\n        <div className=\"file_handler\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"image-upload\"\r\n            id=\"input\"\r\n            multiple\r\n            onChange={(e) => setfiles(e.target.files)}\r\n            accept=\".pdf,.jpg,.jpeg,.png\"\r\n          />\r\n          <label\r\n            htmlFor=\"input\"\r\n            className=\"image-upload display_flex align_items_center justify_content_center text_align_center cursor_pointer\"\r\n          >\r\n            <i\r\n              className={ICONS.fileEarmarkPlusFill}\r\n              title=\"choose your photo\"\r\n            ></i>\r\n            <p>اضافه کردن فایل یا تصویر</p>\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"share_post_on\">\r\n        <h3>اشتراک گذاری در کجا</h3>\r\n        <div className=\"post_boxes display_grid\">\r\n          <div className=\"post_box box_shadow\">\r\n            <select\r\n              id=\"type\"\r\n              onChange={(e) =>\r\n                setIsPublic(e.target.value == \"صفحه اصلی\" ? true : false)\r\n              }\r\n            >\r\n              <option selected disabled>\r\n                موقعیت\r\n              </option>\r\n              <option>صفحه محصل</option>\r\n              <option>صفحه اصلی</option>\r\n            </select>\r\n          </div>\r\n          {!isPublic ? (\r\n            <>\r\n              <div className=\"post_box\">\r\n                <select\r\n                  id=\"type\"\r\n                  onChange={(e) => fieldOfStudeyInputHandling(e)}\r\n                >\r\n                  <option disabled selected>\r\n                    پوهنحی\r\n                  </option>\r\n                  {fields.map((item) => {\r\n                    return <option key={item.id}>{item.fieldName}</option>\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div className=\"post_box\">\r\n                <select id=\"type\" onChange={(e) => setDep(e.target.value)}>\r\n                  <option selected disabled>\r\n                    دیپارتمنت\r\n                  </option>\r\n                  {departments.map((item) => {\r\n                    return <option key={item.id}>{item.departmentName}</option>\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div className=\"post_box\">\r\n                <select id=\"type\" onChange={(e) => setsemester(e.target.value)}>\r\n                  <option selected disabled>\r\n                    سمستر\r\n                  </option>\r\n                  {semesters.map((sem) => {\r\n                    return <option>{sem}</option>\r\n                  })}\r\n                </select>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <button\r\n          style={{ width: \"160px\", marginTop: \"20px\", float: \"left\" }}\r\n          onClick={() => sendInfo(\"next\")}\r\n          className=\" btn\"\r\n        >\r\n          ارسال\r\n        </button>\r\n      </div>\r\n      <BackDrop show={completeMsg.show}>\r\n        {\r\n          <MessageBox\r\n            messageType=\"info\"\r\n            firstBtn={{\r\n              btnText: \"تایید\",\r\n              onClick: () => navigate(\"/admin/post-management\"),\r\n            }}\r\n            message={completeMsg.msg}\r\n            iconType={ICONS.info}\r\n          />\r\n        }\r\n      </BackDrop>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewPost\r\n"],"names":["roles","id","useStateValue","authentication","navigate","useNavigate","useEffect","isAuthenticated","some","item","includes","Roles","userId","ADMIN","STUDENT","useProtect","useState","description","setDescription","semester","setsemester","department","setdepartment","fieldOfStudy","setfeildOfStudy","isPublic","setIsPublic","files","setfiles","fields","setFields","departments","setDepartments","semesters","setsemesters","show","msg","completeMsg","setCompleteMsg","fetch","APIEndpoints","then","res","ok","json","Error","statusText","data","content","className","theme","value","onChange","type","name","multiple","e","target","accept","htmlFor","ICONS","title","selected","disabled","f","find","fieldName","sem","i","push","fieldOfStudeyInputHandling","map","d","departmentName","setDep","style","width","marginTop","float","onClick","body","message","authorId","method","headers","Authorization","token","JSON","stringify","length","formData","FormData","append","filesUrl","sendInfo","BackDrop","MessageBox","messageType","firstBtn","btnText","iconType"],"sourceRoot":""}